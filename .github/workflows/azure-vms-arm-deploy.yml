name: Virtual Machine CICD

on:
  push:
    branches: [ main ]
    paths: 
      - azure-vm/**
      - .github/workflows/azure-vms-arm-deploy.yml
  pull_request:
    branches: [ main ]    
    paths: VM/**

  workflow_dispatch:

env:
  region: eastus
  regGroup: azure-vm
  
jobs:
  validation:
    name: Validations
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: ARM Template Toolkit (ARM TTK) Validation    
        id: armttkvalidation
        uses: aliencube/arm-ttk-actions@v0.3
        with:
          path: azure-vm/vmtemplate.json
          
      - name: Test result
        shell: bash
        continue-on-error: true
        run: |
          echo "${{ toJSON(fromJSON(steps.armttkvalidation.outputs.results)) }}"

      # - uses: azure/login@v1
      #   with:
      #     creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
      #     allow-no-subscriptions: true
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Validate ARM Template
        uses: Azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.SUBSCRIPTIONID }}
          region: ${{ env.region }}
          resourceGroupName: ${{ env.regGroup }}
          template: azure-vm/vmtemplate.json
          deploymentMode: Validate
          parameters: azure-vm/parameters.json adminPassword=xxx
      
      - name: Upload Template as Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: VMTemplate
          # A file, directory or wildcard pattern that describes what to upload
          path: azure-vm/*
          if-no-files-found: error

  PROD:
    name: Deploy to PROD
    if: github.event.ref == 'refs/heads/main'
    needs: [validation]
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: ${{ steps.deployArmProd.outputs.hostname }}
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: VMTemplate         
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Deploy ARM Template
        id: deployArmProd
        uses: Azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          region: ${{ env.region }}
          resourceGroupName: ${{ env.regGroup }}
          template: azure-vm/vmtemplate.json
          deploymentMode: Incremental
          parameters: parameters.json adminPassword=${{ secrets.VM_PASSWORD}}
            
