{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.7.4.23292",
            "templateHash": "3081944633822201146"
        }
    },
    "parameters": {
        "existingResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing Resource Group in which the existing Storage Account is present."
            }
        },
        "existingStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing Storage Account in which the existing File Share to be protected is present."
            }
        },
        "existingFileShareName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing File Share to be protected."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location of the existing Storage Account containing the existing File Share to be protected. New Recovery Services Vault will be created in this location. (Ignore if using existing Recovery Services Vault)."
            }
        },
        "isNewVault": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Set to true if a new Recovery Services Vault is to be created; set to false otherwise."
            }
        },
        "isNewPolicy": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Set to true if a new Backup Policy is to be created for the Recovery Services Vault; set to false otherwise."
            }
        },
        "registerStorageAccount": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Set to true if the existing Storage Account has to be registered to the Recovery Services Vault; set to false otherwise."
            }
        },
        "vaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Recovery Services Vault. (Should have the same location as the Storage Account containing the File Share to be protected in case of an existing Recovery Services Vault)."
            }
        },
        "policyName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Backup Policy."
            }
        },
        "policyProperties": {
            "type": "object",
            "metadata": {
                "description": "Properties for new backup policy."
            }
        }
    },
    "variables": {
        "backupFabric": "Azure",
        "backupManagementType": "AzureStorage"
    },
    "resources": [
        {
            "condition": "[parameters('isNewVault')]",
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2020-02-02",
            "name": "[parameters('vaultName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {}
        },
        {
            "condition": "[parameters('isNewPolicy')]",
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2020-02-02",
            "name": "[format('{0}/{1}', parameters('vaultName'), format('{0}', parameters('policyName')))]",
            "properties": "[parameters('policyProperties')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
            ]
        },
        {
            "condition": "[parameters('registerStorageAccount')]",
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers",
            "apiVersion": "2020-02-02",
            "name": "[format('{0}/{1}/storagecontainer;Storage;{2};{3}', parameters('vaultName'), variables('backupFabric'), parameters('existingResourceGroupName'), parameters('existingStorageAccountName'))]",
            "properties": {
                "backupManagementType": "[variables('backupManagementType')]",
                "containerType": "StorageContainer",
                "sourceResourceId": "[resourceId(parameters('existingResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('existingStorageAccountName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
            ]
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "apiVersion": "2020-02-02",
            "name": "[format('{0}/{1}/{2}/{3}', split(format('{0}/{1}/storagecontainer;Storage;{2};{3}', parameters('vaultName'), variables('backupFabric'), parameters('existingResourceGroupName'), parameters('existingStorageAccountName')), '/')[0], split(format('{0}/{1}/storagecontainer;Storage;{2};{3}', parameters('vaultName'), variables('backupFabric'), parameters('existingResourceGroupName'), parameters('existingStorageAccountName')), '/')[1], split(format('{0}/{1}/storagecontainer;Storage;{2};{3}', parameters('vaultName'), variables('backupFabric'), parameters('existingResourceGroupName'), parameters('existingStorageAccountName')), '/')[2], format('AzureFileShare;{0}', parameters('existingFileShareName')))]",
            "properties": {
                "protectedItemType": "AzureFileShareProtectedItem",
                "sourceResourceId": "[resourceId(parameters('existingResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('existingStorageAccountName'))]",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('vaultName'), format('{0}', parameters('policyName')))]",
                "isInlineInquiry": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers', split(format('{0}/{1}/storagecontainer;Storage;{2};{3}', parameters('vaultName'), variables('backupFabric'), parameters('existingResourceGroupName'), parameters('existingStorageAccountName')), '/')[0], split(format('{0}/{1}/storagecontainer;Storage;{2};{3}', parameters('vaultName'), variables('backupFabric'), parameters('existingResourceGroupName'), parameters('existingStorageAccountName')), '/')[1], split(format('{0}/{1}/storagecontainer;Storage;{2};{3}', parameters('vaultName'), variables('backupFabric'), parameters('existingResourceGroupName'), parameters('existingStorageAccountName')), '/')[2])]",
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('vaultName'), format('{0}', parameters('policyName')))]",
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
            ]
        }
    ]
}
